apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "migration.fullname" . }}
  namespace: spi
  labels:
    {{- include "migration.labels" . | nindent 4 }}
    product: spi
    environment: prod
    facility: {{ include "migration.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "migration.selectorLabels" . | nindent 6 }}
      product: spi
      environment: prod
      facility: {{ include "migration.fullname" . }}
  strategy:
    type: Recreate
  minReadySeconds: 5
  revisionHistoryLimit: 5
  template:
    metadata:
      labels:
        {{- include "migration.labels" . | nindent 8 }}
        product: spi
        environment: prod
        facility: {{ include "migration.fullname" . }}
      annotations:
        sidecar.istio.io/inject: "{{ .Values.istio_sidecar_enabled }}"
    spec:
      serviceAccountName: value-analysis-admin
      securityContext:
        # PEX-15195 this must match the user running the application in the Docker container, so that the application
        # can access AWS RDS web identity token files mounted into the container
        fsGroup: 2021
      dnsConfig:
        options:
          - name: single-request-reopen
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: facility
                      operator: In
                      values:
                        - spi-value-analysis-migration
                    - key: environment
                      operator: In
                      values:
                        - prod
                topologyKey: "kubernetes.io/hostname"
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: facility
                      operator: In
                      values:
                        - spi-value-analysis-migration
                    - key: environment
                      operator: In
                      values:
                        - prod
                topologyKey: "failure-domain.beta.kubernetes.io/zone"
      initContainers:
        - name: {{ include "migration.fullname" . }}
          image: "893963170360.dkr.ecr.eu-central-1.amazonaws.com/spi-value-analysis:{{ .Values.migration_image_tag | default .Values.image_tag }}"
          command: ["java", "-jar", "app.jar", "-config=application-migration.conf"]
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              memory: "0.5Gi"
              cpu: "0.2"
            limits:
              memory: "0.75Gi"
              cpu: "0.3"
          env:
            - name: POSTGRES_URL
              value: "jdbc:postgresql://{{ .Values.value_analysis_db_instance_address }}:5432/signavio"
            - name: POSTGRES_USER
              value: "signavio_admin"
            - name: POSTGRES_KEY_VAULT_PASSPHRASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.fullname" . }}-external-secret
                  key: signingKey
            - name: AWS_REGION
              value: "{{ .Values.region }}"
            - name: JWT_SIGNING_KEY
              valueFrom:
                secretKeyRef:
                  name: authentication
                  key: jwt-signing-key
            - name: AWS_RDS_AUTH_TOKEN_ENABLED
              value: "true"
            - name: AWS_RDS_AUTH_TOKEN_EXPIRY_SECONDS
              value: "{{ .Values.aws_rds_auth_token_expiry_seconds }}"
            - name: DB_CONNECTION_MAX_AGE
              value: "{{ .Values.db_connection_max_age_duration }}"
      containers:
        - name: {{ include "migration.fullname" . }}-keepalive
          image: docker-hub.common.cdn.repositories.cloud.sap/busybox:1.36
          command: ["tail", "-f", "/dev/null"]
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              memory: "128Mi"
              cpu: "0.1"
            limits:
              memory: "256Mi"
              cpu: "0.1"
